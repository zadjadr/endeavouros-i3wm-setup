# Documentation: https://i3wm.org/docs/userguide.html
# Config created by Keyitdev https://www.github.com/keyitdev/dotfiles
# Copyright (C) 2022 Keyitdev

# set mod
set $mod Mod4

# set font
font pango:Cantarell 12

### Runnig apps in background ###

# run dunst
exec_always --no-startup-id dunst &

# launch monitor, background
exec_always --no-startup-id $HOME/.config/i3/scripts/monitor.sh "$HOME/Pictures/wallpapers/Dynamic-Wallpapers/Dark/Fuji-Dark.png"

# launch autotiling

# run battery low warning
exec_always --no-startup-id battery &

# start i3 components
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
exec --no-startup-id nm-applet
exec --no-startup-id mega-sync
exec --no-startup-id autotiling
exec --no-startup-id libinput-gestures-setup start
# exec --no-startup-id gpgconf --launch gpg-agent
exec --no-startup-id $HOME/.local/share/bin/polkitkdeauth.sh
exec --no-startup-id $HOME/.local/share/bin/autossh.sh

### Shortcuts ###

floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+q kill

# apps
bindsym $mod+c exec "code-insiders"
bindsym $mod+o exec "brave"
bindsym $mod+b exec "obs"
bindsym $mod+n exec "pcmanfm"

# change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# save and restore layout with i3-resurrect
bindsym $mod+t exec --no-startup-id i3-resurrect restore
bindsym $mod+y exec --no-startup-id i3-resurrect save

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# run lockscreen
bindsym $mod+l exec ~/.config/i3/scripts/lock.sh "$HOME/Pictures/wallpapers/Dynamic-Wallpapers/Dark/Fuji-Dark.png"

# move workspaces between monitors
# bindsym $mod+b move workspace to output right

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# run rofi programs
# launch desktop applications
bindsym $mod+d exec "pkill rofi || $HOME/.local/share/bin/rofilaunch.sh d"
# switch between desktop applications
# bindsym $mod+Tab exec "pkill rofi || $HOME/.local/share/bin/rofilaunch.sh w"

# bindsym $mod+a exec "rofi -show window -no-default-config -config ~/.config/rofi/main.rasi"
# bindsym $mod+d exec "rofi -show drun -no-default-config -config ~/.config/rofi/main.rasi"
# bindsym $mod+s exec "rofi -show drun -no-default-config -config ~/.config/rofi/full_screen.rasi"
# bindsym $mod+z exec "rofi -show  -modi ':rofi-bookmarks' -no-default-config -config ~/.config/rofi/main.rasi"
# bindsym $mod+x exec "rofi-powermenu"
# bindsym $mod+c exec "rofi-screenshot"

# take a screenshot
bindsym SHIFT+Print exec flameshot screen
bindsym Print exec flameshot gui

# brightness control
bindsym XF86MonBrightnessUp exec ~/.config/i3/scripts/brightness -brightness "5%+"
bindsym XF86MonBrightnessDown exec ~/.config/i3/scripts/brightness -brightness "5%-"

# audio control
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -D pulse sset Master 5%+ && volume &
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -D pulse sset Master 5%- && volume &
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && mute &
#bindsym XF86AudioMicMute exec --no-startup-id amixer -D pulse sset Master 5%+ && volume &

# turn off screen
bindsym XF86ScreenSaver exec xset dpms force off

# toggle microphone
bindsym ctrl + F3 exec amixer set Capture nocap && dunstify -a "Microphone" "Microphone" "Microphone is muted" -r 100 -i /usr/local/bin/icons/mic-off.svg
bindsym ctrl + F4 exec amixer set Capture cap && dunstify -a "Microphone" "Microphone" "Microphone is unmuted" -r 100 -i /usr/local/bin/icons/mic.svg

# toggle touchpad
bindsym ctrl + F9 exec xinput set-prop $(xinput list | grep -oP 'Touchpad.*id=\K\d+') "Device Enabled" 0 && dunstify -a "Touchpad" "Touchpad" "Touchpad is disabled" -r 100
bindsym ctrl + F10 exec xinput set-prop $(xinput list | grep -oP 'Touchpad.*id=\K\d+') "Device Enabled" 1 && dunstify -a "Touchpad" "Touchpad" "Touchpad is enabled" -r 100

# workspaces names
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"


# switch to workspace
bindsym $mod+1    workspace  $ws1
bindsym $mod+2    workspace  $ws2
bindsym $mod+3    workspace  $ws3
bindsym $mod+4    workspace  $ws4
bindsym $mod+5    workspace  $ws5
bindsym $mod+6    workspace  $ws6
bindsym $mod+7    workspace  $ws7
bindsym $mod+8    workspace  $ws8
bindsym $mod+9    workspace  $ws9
bindsym $mod+0    workspace  $ws10

# switch to workspace with numpad keys
bindcode $mod+87 workspace $ws1
bindcode $mod+88 workspace $ws2
bindcode $mod+89 workspace $ws3
bindcode $mod+83 workspace $ws4
bindcode $mod+84 workspace $ws5
bindcode $mod+85 workspace $ws6
bindcode $mod+79 workspace $ws7
bindcode $mod+80 workspace $ws8
bindcode $mod+81 workspace $ws9
bindcode $mod+90 workspace $ws10

# switch to workspace with numlock numpad keys
bindcode $mod+Mod2+87 workspace $ws1
bindcode $mod+Mod2+88 workspace $ws2
bindcode $mod+Mod2+89 workspace $ws3
bindcode $mod+Mod2+83 workspace $ws4
bindcode $mod+Mod2+84 workspace $ws5
bindcode $mod+Mod2+85 workspace $ws6
bindcode $mod+Mod2+79 workspace $ws7
bindcode $mod+Mod2+80 workspace $ws8
bindcode $mod+Mod2+81 workspace $ws9
bindcode $mod+Mod2+90 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1    move container to workspace  $ws1
bindsym $mod+Shift+2    move container to workspace  $ws2
bindsym $mod+Shift+3    move container to workspace  $ws3
bindsym $mod+Shift+4    move container to workspace  $ws4
bindsym $mod+Shift+5    move container to workspace  $ws5
bindsym $mod+Shift+6    move container to workspace  $ws6
bindsym $mod+Shift+7    move container to workspace  $ws7
bindsym $mod+Shift+8    move container to workspace  $ws8
bindsym $mod+Shift+9    move container to workspace  $ws9
bindsym $mod+Shift+0    move container to workspace  $ws10

# move focused container to workspace with numpad keys
bindcode $mod+Shift+87 	move container to workspace  $ws1
bindcode $mod+Shift+88 	move container to workspace  $ws2
bindcode $mod+Shift+89 	move container to workspace  $ws3
bindcode $mod+Shift+83 	move container to workspace  $ws4
bindcode $mod+Shift+84 	move container to workspace  $ws5
bindcode $mod+Shift+85 	move container to workspace  $ws6
bindcode $mod+Shift+79 	move container to workspace  $ws7
bindcode $mod+Shift+80 	move container to workspace  $ws8
bindcode $mod+Shift+81 	move container to workspace  $ws9
bindcode $mod+Shift+90 	move container to workspace  $ws10

# move focused container to workspace with numpad keys
bindcode $mod+Shift+Mod2+87 	move container to workspace  $ws1
bindcode $mod+Shift+Mod2+88 	move container to workspace  $ws2
bindcode $mod+Shift+Mod2+89 	move container to workspace  $ws3
bindcode $mod+Shift+Mod2+83 	move container to workspace  $ws4
bindcode $mod+Shift+Mod2+84 	move container to workspace  $ws5
bindcode $mod+Shift+Mod2+85 	move container to workspace  $ws6
bindcode $mod+Shift+Mod2+79 	move container to workspace  $ws7
bindcode $mod+Shift+Mod2+80 	move container to workspace  $ws8
bindcode $mod+Shift+Mod2+81 	move container to workspace  $ws9
bindcode $mod+Shift+Mod2+90 	move container to workspace  $ws10

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e mode "$mode_system"
set $mode_system (l)ock, (e)xit, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id ~/.config/i3/scripts/lock.sh "$HOME/Pictures/wallpapers/Dynamic-Wallpapers/Dark/Fuji-Dark.png", mode "default"
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym h exec --no-startup-id systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"


# autorandr
bindsym $mod+Shift+a mode "$mode_autorandr"
set $mode_autorandr autorandr (c)ycle, (1) lenovo (2) t430___monitor, (3) t430_monitor_monitor
mode "$mode_autorandr" {
    bindsym c exec --no-startup-id autorandr --cycle, mode "default"
    bindsym 1 exec --no-startup-id autorandr lenovo, mode "default"
    bindsym 2 exec --no-startup-id autorandr t430___monitor, mode "default"
    bindsym 3 exec --no-startup-id autorandr t430_monitor_monitor, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

### BODERS ###

#border width
default_border pixel 2

#border colors
client.focused #ccccff #ccccff #F8F8F2 #ccccff #ccccff
client.focused_inactive #ccccff #ccccff #F8F8F2 #21222C #21222C
client.unfocused #ccccff #ccccff #F8F8F2 #21222C #21222C

### SETTINGS FOR i3 BAR ###

# bar {
#         mode invisible
#         tray_output none
# }

bar {
    font pango:Iosevka Nerd Font 10
    status_command i3status-rs ~/.config/i3status-rust/config.toml
    position top
    # tray_output primary
    tray_padding 2

    # When strip_workspace_numbers is set to yes,
    # any workspace that has a name of the form
    # “[n][:][NAME]” will display only the name.
    strip_workspace_numbers no
    # strip_workspace_name no

    colors {
        separator #666666
        background #222222
        statusline #dddddd
        focused_workspace #0088CC #0088CC #ffffff
        active_workspace #333333 #333333 #ffffff
        inactive_workspace #333333 #333333 #888888
        urgent_workspace #2f343a #900000 #ffffff
    }
}

### SETTINGS FOR i3-gaps ###

# Set inner/outer gaps
gaps inner 0
gaps outer 0

# Smart gaps (gaps used if only more than one container on the workspace)
# smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#smart_borders on

# Press $mod+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
